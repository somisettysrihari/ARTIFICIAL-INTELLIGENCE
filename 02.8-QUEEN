def solve_n_queens(n):
    def backtrack(row, cols, diag1, diag2):
        if row == n:
            solutions.append(board[:])
            return
        for col in range(n):
            if col in cols or (row - col) in diag1 or (row + col) in diag2:
                continue
            cols.add(col)
            diag1.add(row - col)
            diag2.add(row + col)
            board[row] = col
            backtrack(row + 1, cols, diag1, diag2)
            cols.remove(col)
            diag1.remove(row - col)
            diag2.remove(row + col)

    solutions = []
    board = [-1] * n
    backtrack(0, set(), set(), set())
    return solutions
result = solve_n_queens(8)
print(result)
